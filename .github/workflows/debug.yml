name: Debug Build

on:
  # push:
    # branches: [ main ]
  # pull_request:
    # branches: [ main ]

  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Restore Cache
        uses: actions/cache@main
        with:
          key: cache-build-linux
          path: |
            .haxelib/
            export/debug/linux/haxe/
            export/debug/linux/obj/
          restore-keys: |
            cache-build-linux
      - name: Install Haxelib
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib haxe -y
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          sudo apt-get install vlc-bin
          sudo apt-get -y install libidn12
          haxe -cp ./compileData -D analyzer-optimize -main Libraries --interp
      - name: Rebuild extension-webm
        run: |
          haxelib run lime rebuild extension-webm linux
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux -debug --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: 'export/debug/linux/bin'
      - name: Uploading new cache
        uses: actions/cache@main
        with:
          key: cache-build-linux
          path: |
            .haxelib/
            export/debug/linux/haxe/
            export/debug/linux/obj/
          restore-keys: |
            cache-build-linux
  buildWindows64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Restore Cache
        uses: actions/cache@main
        with:
          key: cache-build-windows
          path: |
            .haxelib/
            export/debug/windows/haxe/
            export/debug/windows/obj/
          restore-keys: |
            cache-build-windows
      - name: Install Haxelib
        run: |
          haxe -cp ./compileData -D analyzer-optimize -main Libraries --interp
      - name: Rebuild extension-webm
        run: |
          haxelib run lime rebuild extension-webm windows
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows -debug --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: windows64Build
          path: export/debug/windows/bin
      - name: Uploading new cache
        uses: actions/cache@main
        with:
          key: cache-build-windows
          path: |
            .haxelib/
            export/debug/windows/haxe/
            export/debug/windows/obj/
          restore-keys: |
            cache-build-windows
  buildMacOS:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@main

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Restore Cache
        uses: actions/cache@main
        with:
          key: cache-build-mac
          path: |
            .haxelib/
            export/debug/macos/haxe/
            export/debug/macos/obj/
          restore-keys: |
            cache-build-mac
      - name: Install Haxelib
        run: |
          haxe -cp ./compileData -D analyzer-optimize -main Libraries --interp
      - name: Rebuild extension-webm
        run: |
          haxelib run lime rebuild extension-webm mac
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac -debug --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild
          path: export/debug/macos/bin
      - name: Uploading new cache
        uses: actions/cache@main
        with:
          key: cache-build-mac
          path: |
            .haxelib/
            export/debug/macos/haxe/
            export/debug/macos/obj/
          restore-keys: |
            cache-build-mac